- hosts: all
  tasks:
    - name: "Include secret vars"
      include_vars: secrets.yml

    - name: "Include staging secret vars"
      include_vars: secrets_staging.yml
      when: deploy_environment == "staging"

    - name: "Include production secret vars"
      include_vars: secrets_production.yml
      when: deploy_environment == "production"

    - name: "Include public vars"
      include_vars: vars.yml

    - name: Sync backups to production
      ansible.posix.synchronize:
        src: "{{ playbook_dir }}/../backups/"
        dest: "{{ site_path }}/backups/"
      become: true
      become_user: "{{ username }}"

    - name: Make sure gunicorn service is stopped
      systemd:
        state: stopped
        name: "{{ project_name }}"

    - name: Remove the running database
      community.general.postgresql_db:
        name: "{{ postgres_database }}"
        state: absent
      become: true
      become_user: postgres

    - name: Create a new postgres database
      community.general.postgresql_db:
        name: "{{ postgres_database }}"
        state: present
        owner: "{{ postgres_user }}"
      become: true
      become_user: postgres

    - name: Restore database from backup
      community.general.postgresql_db:
        state: restore
        target: "{{ postgres_backup }}"
        name: "{{ postgres_database }}"
        owner: "{{ postgres_user }}"
      become: true
      become_user: postgres

    - name: Grant db user access to database
      community.postgresql.postgresql_privs:
        type: database
        state: present
        database: "{{ postgres_database }}"
        roles: "{{ postgres_user }}"
        grant_option: false
        privs: all
      become: true
      become_user: postgres

    - name: Grant db user access to tables
      community.postgresql.postgresql_privs:
        type: table
        state: present
        db: "{{ postgres_database }}"
        roles: "{{ postgres_user }}"
        grant_option: false
        privs: all
        objs: ALL_IN_SCHEMA
      become: true
      become_user: postgres

    - name: Make sure gunicorn service is started
      systemd:
        state: started
        name: "{{ project_name }}"
